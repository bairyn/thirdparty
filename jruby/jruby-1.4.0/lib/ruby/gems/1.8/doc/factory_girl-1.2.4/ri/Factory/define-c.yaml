--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: (instance)
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Defines a new factory that can be used by the build strategies (create and build) to build new objects.
  - !ruby/struct:SM::Flow::P 
    body: "Arguments:"
  - !ruby/object:SM::Flow::LIST 
    contents: 
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: "name: <tt>Symbol</tt> or <tt>String</tt> A unique name used to identify this factory."
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: "options: <tt>Hash</tt>"
    type: :BULLET
  - !ruby/struct:SM::Flow::P 
    body: "Options:"
  - !ruby/object:SM::Flow::LIST 
    contents: 
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: "class: <tt>Symbol</tt>, <tt>Class</tt>, or <tt>String</tt> The class that will be used when generating instances for this factory. If not specified, the class will be guessed from the factory name."
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: "parent: <tt>Symbol</tt> The parent factory. If specified, the attributes from the parent factory will be copied to the current one with an ability to override them."
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: "default_strategy: <tt>Symbol</tt> The strategy that will be used by the Factory shortcut method. Defaults to :create."
    type: :BULLET
  - !ruby/struct:SM::Flow::P 
    body: "Yields: <tt>Factory</tt> The newly created factory."
full_name: Factory::define
is_singleton: true
name: define
params: (name, options = {}) {|instance| ...}
visibility: public
