--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
  - !ruby/struct:SM::Flow::P 
    body: Adds a Sham module, which provides an alternate interface to Factory::Sequence.
  - !ruby/struct:SM::Flow::P 
    body: "Usage:"
  - !ruby/struct:SM::Flow::VERB 
    body: "  require 'factory_girl/syntax/sham'\n\n  Sham.email {|n| &quot;somebody#{n}@example.com&quot; }\n\n  Factory.define :user do |factory|\n    factory.email { Sham.email }\n  end\n"
  - !ruby/struct:SM::Flow::P 
    body: Note that you can also use Faker, but it is recommended that you simply use a sequence as in the above example, as factory_girl does not provide protection against duplication in randomized sequences, and a randomized value does not provide any tangible benefits over an ascending sequence.
  - !ruby/struct:SM::Flow::P 
    body: This syntax was derived from Pete Yandell's machinist.
constants: []

full_name: Factory::Syntax::Sham
includes: []

instance_methods: []

name: Sham
superclass: 
