--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Adds an attribute that builds an association. The associated instance will be built using the same build strategy as the parent instance.
  - !ruby/struct:SM::Flow::P 
    body: "Example:"
  - !ruby/struct:SM::Flow::VERB 
    body: "  Factory.define :user do |f|\n    f.name 'Joey'\n  end\n\n  Factory.define :post do |f|\n    f.association :author, :factory =&gt; :user\n  end\n"
  - !ruby/struct:SM::Flow::P 
    body: "Arguments:"
  - !ruby/object:SM::Flow::LIST 
    contents: 
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: "name: <tt>Symbol</tt> The name of this attribute."
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: "options: <tt>Hash</tt>"
    type: :BULLET
  - !ruby/struct:SM::Flow::P 
    body: "Options:"
  - !ruby/object:SM::Flow::LIST 
    contents: 
      - !ruby/struct:SM::Flow::LI 
        label: "*"
        body: "factory: <tt>Symbol</tt> or <tt>String</tt>"
      - !ruby/struct:SM::Flow::VERB 
        body: " The name of the factory to use when building the associated instance.\n If no name is given, the name of the attribute is assumed to be the\n name of the factory. For example, a &quot;user&quot; association will by\n default use the &quot;user&quot; factory.\n"
    type: :BULLET
full_name: Factory#association
is_singleton: false
name: association
params: (name, options = {})
visibility: public
