--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Parses a string containing a natural language date or time. If the parser can find a date or time, either a Time or Chronic::Span will be returned (depending on the value of <tt>:guess</tt>). If no date or time can be found, <tt>nil</tt> will be returned.
  - !ruby/struct:SM::Flow::P 
    body: "Options are:"
  - !ruby/object:SM::Flow::LIST 
    contents: 
      - !ruby/struct:SM::Flow::LI 
        label: <tt>:context</tt>
        body: <tt>:past</tt> or <tt>:future</tt> (defaults to <tt>:future</tt>)
      - !ruby/struct:SM::Flow::P 
        body: If your string represents a birthday, you can set <tt>:context</tt> to <tt>:past</tt> and if an ambiguous string is given, it will assume it is in the past. Specify <tt>:future</tt> or omit to set a future context.
      - !ruby/struct:SM::Flow::LI 
        label: <tt>:now</tt>
        body: Time (defaults to Time.now)
      - !ruby/struct:SM::Flow::P 
        body: By setting <tt>:now</tt> to a Time, all computations will be based off of that time instead of Time.now
      - !ruby/struct:SM::Flow::LI 
        label: <tt>:guess</tt>
        body: <tt>true</tt> or <tt>false</tt> (defaults to <tt>true</tt>)
      - !ruby/struct:SM::Flow::P 
        body: By default, the parser will guess a single point in time for the given date or time. If you'd rather have the entire time span returned, set <tt>:guess</tt> to <tt>false</tt> and a Chronic::Span will be returned.
      - !ruby/struct:SM::Flow::LI 
        label: <tt>:ambiguous_time_range</tt>
        body: Integer or <tt>:none</tt> (defaults to <tt>6</tt> (6am-6pm))
      - !ruby/struct:SM::Flow::P 
        body: If an Integer is given, ambiguous times (like 5:00) will be assumed to be within the range of that time in the AM to that time in the PM. For example, if you set it to <tt>7</tt>, then the parser will look for the time between 7am and 7pm. In the case of 5:00, it would assume that means 5:00pm. If <tt>:none</tt> is given, no assumption will be made, and the first matching instance of that time will be used.
    type: :LABELED
full_name: Chronic::parse
is_singleton: true
name: parse
params: (text, specified_options = {})
visibility: public
