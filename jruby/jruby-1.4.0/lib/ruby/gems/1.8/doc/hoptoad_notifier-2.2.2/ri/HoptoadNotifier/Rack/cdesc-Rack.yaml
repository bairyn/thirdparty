--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
  - !ruby/object:RI::MethodSummary 
    name: new
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Middleware for Rack applications. Any errors raised by the upstream application will be delivered to Hoptoad and re-raised.
  - !ruby/struct:SM::Flow::P 
    body: "Synopsis:"
  - !ruby/struct:SM::Flow::VERB 
    body: "  require 'rack'\n  require 'hoptoad_notifier'\n\n  HoptoadNotifier.configure do |config|\n    config.api_key = 'my_api_key'\n  end\n\n  app = Rack::Builder.app do\n    use HoptoadNotifier::Rack\n    run lambda { |env| raise &quot;Rack down&quot; }\n  end\n"
  - !ruby/struct:SM::Flow::P 
    body: Use a standard HoptoadNotifier.configure call to configure your api key.
constants: []

full_name: HoptoadNotifier::Rack
includes: []

instance_methods: 
  - !ruby/object:RI::MethodSummary 
    name: call
name: Rack
superclass: Object
